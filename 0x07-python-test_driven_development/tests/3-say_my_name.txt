The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

First import the module:

	>>> say_my_name = __import__('3-say_my_name').say_my_name

Normal test cases:

    	>>> say_my_name("John", "Smith")
	My name is John Smith
	>>> say_my_name("W", "W")
	My name is W W
	>>> say_my_name("Walter")
	My name is Walter 
	>>> say_my_name("", "")
	My name is  

Test with invalid input type (non-integer):

	>>> say_my_name("Walter", 2)
	Traceback (most recent call last):
	...
	TypeError: last_name must be a string

	>>> say_my_name(2, "White")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

	>>> say_my_name(1, 2)
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

	>>> say_my_name(["Walter"], ["White"])
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

	>>> say_my_name(None)
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

Test invalid arguments:

    	>>> say_my_name()
	Traceback (most recent call last):
	...
    	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

    	>>> say_my_name("Mr", "Walter", "White")
	Traceback (most recent call last):
	...
    	TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

