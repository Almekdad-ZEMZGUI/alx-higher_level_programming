Using ``lazy_matrix_mul``
---------------------

First import the module:

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Normal test cases:

     	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
     	[[ 7 10]
	 [15 22]]

     	>>> print(matrix_mul([[1.0, 2.0], [3.0, 4.0]], [[1, 2], [3, 4]]))
     	[[ 7. 10.]
	 [15. 22.]]
	
Test empty matrix:
     	>>> m_a = []
     	>>> m_b = [[2.0, 0], [5, 2]]
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	ValueError: m_a can't be empty

     	>>> m_a = [[66, 0], [0, 0]]
     	>>> m_b = []
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	ValueError: m_b can't be empty

     	>>> m_a = [[25, 0], [31, 2]]
     	>>> m_b = [[]]
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	ValueError: m_b can't be empty

Test invalid arguments:

     	>>> m_a = [[5, 2], [5, 2]]
     	>>> m_b = [[1, 2], [1, 22, 2, 4, 66]]
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	TypeError: each row of m_b must should be of the same size

     	>>> m_a = [[1, 21], [21, 2, 3, 4]]
     	>>> m_b = [[0.0, 2], [1.0, 2]]
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	TypeError: each row of m_a must should be of the same size


     	>>> m_a = [["hello"], ["there"]]
     	>>> print(matrix_mul(m_a, m_a))
     	Traceback (most recent call last):
     	...
     	TypeError: m_a should contain only integers or floats

     	>>> m_a = (6, 2)
     	>>> m_b = [[1, 2], [1, 2]]
     	>>> print(matrix_mul(m_a, m_b))
     	Traceback (most recent call last):
     	...
     	TypeError: m_a must be a list
